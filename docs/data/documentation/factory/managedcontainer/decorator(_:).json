{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"decorator","kind":"internalParam"},{"kind":"text","text":": (("},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"]}],"abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"text":"(((","kind":"text"},{"kind":"keyword","text":"Any"},{"text":") -> ())?)","kind":"text"}],"symbolKind":"method","modules":[{"name":"Factory"}],"roleHeading":"Instance Method","title":"decorator(_:)","extendedModule":"Factory","role":"symbol","externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","title":"ManagedContainer","role":"symbol","url":"\/documentation\/factory\/managedcontainer"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"text":"(((","kind":"text"},{"kind":"keyword","text":"Any"},{"text":") -> ())?)","kind":"text"}],"url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","role":"symbol","type":"topic","kind":"symbol","title":"decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}]},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}