{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer"]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"role":"symbol","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"title":"ManagedContainer","externalID":"s:7Factory16ManagedContainerP"},"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/manager"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-65zle","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-78te9","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-1ucr5","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)"]}],"relationshipsSections":[{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Resolving","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"],"kind":"relationships"},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"},{"kind":"text","text":" : AnyObject"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s"},{"type":"text","text":" "},{"type":"text","text":"an example of passing such a container to a view model for dependency resolution."}]},{"type":"codeListing","syntax":"swift","code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"]},{"inlineContent":[{"text":"See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","isActive":true},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"},"references":{"doc://Factory/documentation/Factory/ManagedContainer/promised(key:)-1ucr5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"type":"topic","abstract":[{"text":"Syntactic sugar allows container to create a factory where registration is promised before resolution.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/managedcontainer\/promised(key:)-1ucr5","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-1ucr5","kind":"symbol","title":"promised(key:)"},"doc://Factory/documentation/Factory/ManagedContainer/manager":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ContainerManager","preciseIdentifier":"s:7Factory16ContainerManagerC","kind":"typeIdentifier"}],"abstract":[{"text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this fashion makes creating and using your own custom containers much simpler."}],"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/manager","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/manager","kind":"symbol","required":true,"title":"manager"},"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/Container":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","title":"Container","kind":"symbol","type":"topic","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"url":"\/documentation\/factory\/container","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}]},"doc://Factory/documentation/Factory/ManagedContainer/callAsFunction(key:_:)-65zle":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-65zle","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-65zle","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound Factory."}],"title":"callAsFunction(key:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://Factory/documentation/Factory/ManagedContainer/with(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/managedcontainer\/with(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)","kind":"symbol","title":"with(_:)"},"doc://Factory/documentation/Factory/ManagedContainer/callAsFunction(key:_:)-78te9":{"type":"topic","url":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-78te9","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound ParameterFactory."}],"title":"callAsFunction(key:_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-78te9","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", (","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer":{"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","title":"ManagedContainer","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedContainer"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:)-33ecn":{"type":"topic","kind":"symbol","title":"promised(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"?>","kind":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","url":"\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn","role":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a factory where registration is promised before resolution.","type":"text"}]},"doc://Factory/documentation/Factory/Containers":{"url":"\/documentation\/factory\/containers","type":"topic","role":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","kind":"article","title":"Containers","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}]},"doc://Factory/documentation/Factory/SharedContainer":{"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/sharedcontainer","kind":"symbol","title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Resolving":{"type":"topic","abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"navigatorTitle":[{"text":"Resolving","kind":"identifier"}],"url":"\/documentation\/factory\/resolving","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Resolving","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Resolving","kind":"identifier"}],"role":"symbol","title":"Resolving"},"doc://Factory/documentation/Factory/ManagedContainer/reset(options:)":{"abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/factory\/managedcontainer\/reset(options:)","kind":"symbol","title":"reset(options:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/reset(options:)","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}],"type":"topic","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","kind":"symbol","title":"decorator(_:)"}}}