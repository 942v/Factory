{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/AutoRegistering","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"abstract":[{"text":"Adds an registration “hook” to a ","type":"text"},{"type":"codeVoice","code":"Container"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutoRegistering","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Add this protocol to a container to support first-time registration of needed dependencies prior to first resolution","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a dependency on that container."}]},{"type":"codeListing","syntax":"swift","code":["extension Container: AutoRegistering {","    func autoRegister() {","        someService.register {","            CrossModuleService()","        }","    }","}"]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"autoRegister"},{"type":"text","text":" function is called on each instantiated container prior to"},{"type":"text","text":" "},{"type":"text","text":"the first resolution of a Factory on that container."}],"type":"paragraph"},{"name":"Warning","style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Calling ","type":"text"},{"code":"container.manager.reset(options: .all)","type":"codeVoice"},{"text":" restores the container to it’s initial state","type":"text"},{"type":"text","text":" "},{"text":"and autoRegister will be called again if it exists.","type":"text"}]}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/AutoRegistering\/autoRegister()"],"title":"Instance Methods"}],"metadata":{"externalID":"s:7Factory15AutoRegisteringP","title":"AutoRegistering","role":"symbol","navigatorTitle":[{"text":"AutoRegistering","kind":"identifier"}],"modules":[{"name":"Factory"}],"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AutoRegistering","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/autoregistering"]}],"references":{"doc://Factory/documentation/Factory/AutoRegistering/autoRegister()":{"role":"symbol","title":"autoRegister()","identifier":"doc:\/\/Factory\/documentation\/Factory\/AutoRegistering\/autoRegister()","required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"autoRegister"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"User provided function that supports first-time registration of needed dependencies prior to first resolution"},{"text":" ","type":"text"},{"text":"of a dependency on that container.","type":"text"}],"url":"\/documentation\/factory\/autoregistering\/autoregister()","type":"topic"},"doc://Factory/documentation/Factory/AutoRegistering":{"url":"\/documentation\/factory\/autoregistering","identifier":"doc:\/\/Factory\/documentation\/Factory\/AutoRegistering","kind":"symbol","abstract":[{"text":"Adds an registration “hook” to a ","type":"text"},{"type":"codeVoice","code":"Container"},{"type":"text","text":"."}],"title":"AutoRegistering","role":"symbol","type":"topic","navigatorTitle":[{"text":"AutoRegistering","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AutoRegistering"}]},"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"}}}