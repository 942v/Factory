{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn"]}],"metadata":{"role":"symbol","title":"promised(key:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"modules":[{"name":"Factory"}],"externalID":"s:7Factory16ManagedContainerPAAE8promised3keyAA09ParameterA0Vyqd__qd_0_SgGs12StaticStringV_tr0_lF","extendedModule":"Factory","symbolKind":"method","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory where registration is promised before resolution."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Factory09ParameterA0V","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"typeIdentifier","text":"ParameterFactory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"type":"topic","url":"\/documentation\/factory\/managedcontainer","title":"ManagedContainer"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:)-33ecn":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":") -> "},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory where registration is promised before resolution."}],"type":"topic","url":"\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn","title":"promised(key:)"}}}