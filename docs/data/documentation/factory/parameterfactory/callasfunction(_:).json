{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parameters","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"syntax":"swift","code":["let service = container.parameterService(16)"],"type":"codeListing"}]}],"sections":[],"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/callasfunction(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"("},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"Factory"}],"externalID":"s:7Factory09ParameterA0V14callAsFunctionyq_xF","title":"callAsFunction(_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/callAsFunction(_:)"},"abstract":[{"type":"text","text":"Resolves a factory capable of taking parameters at runtime."}],"references":{"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/callAsFunction(_:)":{"role":"symbol","title":"callAsFunction(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/callAsFunction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Resolves a factory capable of taking parameters at runtime.","type":"text"}],"url":"\/documentation\/factory\/parameterfactory\/callasfunction(_:)","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","url":"\/documentation\/factory\/parameterfactory","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"type":"topic","role":"symbol","title":"ParameterFactory","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}]}}}