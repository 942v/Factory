{"kind":"symbol","sections":[],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Property","title":"singleton","modules":[{"name":"Factory"}],"extendedModule":"Factory","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp","symbolKind":"property"},"references":{"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class","title":"Scope.Singleton","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying":{"navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","kind":"symbol","type":"topic","title":"FactoryModifying","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/FactoryModifying/singleton":{"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/singleton","title":"singleton","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","role":"symbol"}}}