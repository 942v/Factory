{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"modules":[{"name":"Factory"}],"symbolKind":"property","roleHeading":"Instance Property","extendedModule":"Factory","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE6sharedxvp::SYNTHESIZED::s:7FactoryAAV"},"kind":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared"},"variants":[{"paths":["\/documentation\/factory\/factory\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"references":{"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/Factory/shared":{"kind":"symbol","type":"topic","url":"\/documentation\/factory\/factory\/shared","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","role":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","type":"topic"},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","kind":"article","url":"\/documentation\/factory\/factory\/factorymodifying-implementations","type":"topic","abstract":[],"title":"FactoryModifying Implementations"},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]}}}