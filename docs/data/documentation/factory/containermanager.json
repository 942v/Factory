{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerManager"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ContainerManager also implements several functions that can be used to reset the container"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}]},{"inlineContent":[{"text":"Those functions are designed primarily for testing.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/containermanager"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"modules":[{"name":"Factory"}],"roleHeading":"Class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerManager"}],"title":"ContainerManager","symbolKind":"class","externalID":"s:7Factory16ContainerManagerC"},"kind":"symbol","abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"references":{"doc://Factory/documentation/Factory/ContainerManager/defaultScope":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"defaultScope","kind":"identifier"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":"?","kind":"text"}],"title":"defaultScope","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","url":"\/documentation\/factory\/containermanager\/defaultscope","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Default scope"}]},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/reset(options:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","title":"reset(options:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Resets the Container to its original state, removing all registrations and clearing all scope caches."}],"role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/ContainerManager/promiseTriggersError":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"promiseTriggersError"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","title":"promiseTriggersError","url":"\/documentation\/factory\/containermanager\/promisetriggerserror","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Public variable promise behavior"}]},"doc://Factory/documentation/Factory/ContainerManager/logger":{"abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/factory\/containermanager\/logger","title":"logger","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger"},"doc://Factory/documentation/Factory/ContainerManager":{"navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/factory\/containermanager","title":"ContainerManager","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}]},"doc://Factory/documentation/Factory/ContainerManager/trace":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trace","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace","title":"trace","url":"\/documentation\/factory\/containermanager\/trace","type":"topic","kind":"symbol","abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}]},"doc://Factory/documentation/Factory/ContainerManager/init()":{"url":"\/documentation\/factory\/containermanager\/init()","kind":"symbol","abstract":[{"type":"text","text":"Public initializer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"init()","role":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","type":"topic","abstract":[{"text":"Public variable exposing dependency chain test maximum","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencyChainTestMax"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","url":"\/documentation\/factory\/containermanager\/dependencychaintestmax","title":"dependencyChainTestMax"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":")","kind":"text"}],"title":"reset(scope:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","url":"\/documentation\/factory\/containermanager\/reset(scope:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}]},"doc://Factory/documentation/Factory/ContainerManager/push()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","title":"push()","url":"\/documentation\/factory\/containermanager\/push()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test function pushes the current registration and cache states"}]},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pop"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/factory\/containermanager\/pop()","title":"pop()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","abstract":[{"text":"Test function pops and restores a previously pushed registration and cache state","type":"text"}]}}}