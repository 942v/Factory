{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/wrappedvalue"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","symbolKind":"property","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"externalID":"s:7Factory12LazyInjectedV12wrappedValuexvp","modules":[{"name":"Factory"}],"role":"symbol"},"references":{"doc://Factory/documentation/Factory/LazyInjected":{"title":"LazyInjected","kind":"symbol","url":"\/documentation\/factory\/lazyinjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}],"navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/LazyInjected/wrappedValue":{"url":"\/documentation\/factory\/lazyinjected\/wrappedvalue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue","abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"title":"wrappedValue","kind":"symbol","role":"symbol"}}}