{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ContainerManager also implements several functions tha can be used to reset the container"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Those functions are designed primarily for testing."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/factory\/containermanager"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ContainerManager encapsulates and manages the registration, resolution, and scope caching mechanisms for a given container."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"title":"ContainerManager","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7Factory16ContainerManagerC","modules":[{"name":"Factory"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"]},{"title":"Enumerations","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/ResetOptions"]}],"references":{"doc://Factory/documentation/Factory/ContainerManager/push()":{"role":"symbol","title":"push()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Test function pushes the current registration and cache states"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/push()"},"doc://Factory/documentation/Factory/ContainerManager/ResetOptions":{"role":"symbol","title":"ContainerManager.ResetOptions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResetOptions"}],"abstract":[{"type":"text","text":"Reset options for Factory’s and Container’s"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/ResetOptions","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResetOptions"}],"url":"\/documentation\/factory\/containermanager\/resetoptions"},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"role":"symbol","title":"reset(options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ContainerManager","preciseIdentifier":"s:7Factory16ContainerManagerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ResetOptions","preciseIdentifier":"s:7Factory16ContainerManagerC12ResetOptionsO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Resets the Container to its original state, removing all registrations and clearing all scope caches."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/reset(options:)"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","type":"topic","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"role":"symbol","title":"pop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/pop()"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"role":"symbol","title":"reset(scope:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/reset(scope:)"},"doc://Factory/documentation/Factory/ContainerManager":{"role":"symbol","title":"ContainerManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"abstract":[{"type":"text","text":"ContainerManager encapsulates and manages the registration, resolution, and scope caching mechanisms for a given container."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"url":"\/documentation\/factory\/containermanager"},"doc://Factory/documentation/Factory/ContainerManager/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Public initializer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/init()"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"role":"symbol","title":"dependencyChainTestMax","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencyChainTestMax"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Public variable exposing dependency chain test maximum"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/dependencychaintestmax"}}}