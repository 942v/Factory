{"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/decorator(_:)"]}],"metadata":{"extendedModule":"Factory","externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzcF::SYNTHESIZED::s:7FactoryAAV","title":"decorator(_:)","roleHeading":"Instance Method","modules":[{"name":"Factory"}],"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decorator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This includes previously created items that may have been cached by a scope.","type":"text"}],"type":"paragraph"},{"code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact."}]}],"kind":"content"}],"abstract":[{"text":"Adds a factory specific decorator. The decorator will be ","type":"text"},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"references":{"doc://Factory/documentation/Factory/Factory/decorator(_:)":{"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"title":"decorator(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","url":"\/documentation\/factory\/factory\/decorator(_:)"},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","kind":"article","url":"\/documentation\/factory\/factory\/factorymodifying-implementations","type":"topic","abstract":[],"title":"FactoryModifying Implementations"},"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"}}}