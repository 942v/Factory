{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ContainerManager"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":")","kind":"text"}],"title":"reset(scope:)","modules":[{"name":"Factory"}],"symbolKind":"method","externalID":"s:7Factory16ContainerManagerC5reset5scopeyAA5ScopeC_tF","roleHeading":"Instance Method","extendedModule":"Factory"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/containermanager\/reset(scope:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"sections":[],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/ContainerManager":{"title":"ContainerManager","url":"\/documentation\/factory\/containermanager","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ContainerManager","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","kind":"symbol","abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}]},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","title":"reset(scope:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}],"url":"\/documentation\/factory\/containermanager\/reset(scope:)","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}]},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","title":"Scope"}}}