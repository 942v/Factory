{"variants":[{"paths":["\/documentation\/factory\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"],"title":"Type Properties"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object","type":"text"},{"text":" ","type":"text"},{"text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned.","type":"text"}]},{"inlineContent":[{"type":"text","text":"That behavior can vary according to the scope type (e.g. Shared or Graph)"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will all of its cached references."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance"},{"type":"text","text":" "},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope","interfaceLanguage":"swift"},"sections":[],"metadata":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"title":"Scope","roleHeading":"Class","role":"symbol","externalID":"s:7Factory5ScopeC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"modules":[{"name":"Factory"}],"symbolKind":"class"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"seeAlsoSections":[{"title":"Scope Class Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"generated":true}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"title":"Inherited By","type":"inheritedBy"}],"references":{"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Singleton","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC"}],"title":"singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","kind":"symbol","abstract":[{"text":"A reference to the default singleton scope manager.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/scope\/singleton-swift.type.property"},"doc://Factory/documentation/Factory/Scopes":{"role":"collectionGroup","url":"\/documentation\/factory\/scopes","abstract":[{"type":"text","text":"Not everything wants to be a Singleton. Learn the power of Scopes."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","type":"topic","kind":"article","title":"Scopes"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class","title":"Scope.Shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Shared"}],"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"role":"symbol"},"doc://Factory/documentation/Factory/Scope/shared-swift.type.property":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"text":"Shared","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6SharedC"}],"role":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.type.property","abstract":[{"text":"A reference to the default shared scope manager.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","title":"shared"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"type":"topic","url":"\/documentation\/factory\/scope\/graph-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","navigatorTitle":[{"text":"Graph","kind":"identifier"}],"abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Unique","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Unique","kind":"identifier"}],"title":"Scope.Unique","abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}],"url":"\/documentation\/factory\/scope\/unique-swift.class"},"doc://Factory/documentation/Factory/Scope/cached-swift.type.property":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier","text":"Scope"},{"kind":"text","text":"."},{"text":"Cached","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6CachedC"}],"title":"cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","url":"\/documentation\/factory\/scope\/cached-swift.type.property","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A reference to the default cached scope manager."}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","url":"\/documentation\/factory\/scope\/singleton-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","role":"symbol","title":"Scope.Singleton","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/graph-swift.type.property":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"graph","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":".","kind":"text"},{"text":"Graph","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC5GraphC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","title":"graph","url":"\/documentation\/factory\/scope\/graph-swift.type.property","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A reference to the default graph scope manager."}]},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","title":"Scope","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"type":"text","text":" "},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Scope/unique-swift.type.property":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property","title":"unique","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6UniqueC","text":"Unique"}],"url":"\/documentation\/factory\/scope\/unique-swift.type.property","role":"symbol","abstract":[{"type":"text","text":"A reference to the default unique scope."}]}}}