{"sections":[],"metadata":{"modules":[{"name":"Factory"}],"role":"collectionGroup","title":"ManagedContainer Implementations"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Container"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Container\/ManagedContainer-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-40wjo","doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-8hpv0","doc:\/\/Factory\/documentation\/Factory\/Container\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-6682d","doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-7g95","doc:\/\/Factory\/documentation\/Factory\/Container\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/Container\/with(_:)"]}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/container\/managedcontainer-implementations"]}],"references":{"doc://Factory/documentation/Factory/Container/reset(options:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"title":"reset(options:)","role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/reset(options:)","url":"\/documentation\/factory\/container\/reset(options:)","abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"kind":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Container/callAsFunction(key:_:)-8hpv0":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"callAsFunction(key:_:)","role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-8hpv0","url":"\/documentation\/factory\/container\/callasfunction(key:_:)-8hpv0","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound Factory."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Container/promised(key:)-7g95":{"url":"\/documentation\/factory\/container\/promised(key:)-7g95","abstract":[{"text":"Syntactic sugar allows container to create a factory where registration is promised before resolution.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"kind":"symbol","type":"topic","title":"promised(key:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-7g95","role":"symbol"},"doc://Factory/documentation/Factory/Container/with(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/with(_:)","title":"with(_:)","abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"url":"\/documentation\/factory\/container\/with(_:)","kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory/Container":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","type":"topic","abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol","url":"\/documentation\/factory\/container","title":"Container"},"doc://Factory/documentation/Factory/Container/promised(key:)-6682d":{"role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory where registration is promised before resolution."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"url":"\/documentation\/factory\/container\/promised(key:)-6682d","type":"topic","title":"promised(key:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-6682d"},"doc://Factory/documentation/Factory/Container/callAsFunction(key:_:)-40wjo":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"title":"callAsFunction(key:_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-40wjo","abstract":[{"text":"Syntactic sugar allows container to create a properly bound ParameterFactory.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/container\/callasfunction(key:_:)-40wjo","role":"symbol"},"doc://Factory/documentation/Factory/Container/decorator(_:)":{"url":"\/documentation\/factory\/container\/decorator(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"text":"Any","kind":"keyword"},{"kind":"text","text":") -> ())?)"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/decorator(_:)","title":"decorator(_:)","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"kind":"symbol","type":"topic"}}}