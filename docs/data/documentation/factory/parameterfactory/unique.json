{"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/unique"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unique","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"unique","symbolKind":"property","extendedModule":"Factory","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:7Factory09ParameterA0V","modules":[{"name":"Factory"}],"roleHeading":"Instance Property"},"abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"While you can add the modifier, Factoryâ€™s are unique by default."}],"type":"paragraph"}]}],"references":{"doc://Factory/documentation/Factory/ParameterFactory/unique":{"url":"\/documentation\/factory\/parameterfactory\/unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"reference"},{"type":"text","text":"."}],"type":"topic","title":"unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","title":"Scope"},"doc://Factory/documentation/Factory/ParameterFactory/FactoryModifying-Implementations":{"type":"topic","title":"FactoryModifying Implementations","url":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations","role":"collectionGroup","abstract":[],"kind":"article"}}}