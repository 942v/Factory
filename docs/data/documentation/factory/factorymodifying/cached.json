{"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"property","roleHeading":"Instance Property","role":"symbol","title":"cached","extendedModule":"Factory","externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp","modules":[{"name":"Factory"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"]}]}],"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/cached"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/FactoryModifying/cached":{"url":"\/documentation\/factory\/factorymodifying\/cached","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"cached","role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Cached","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","title":"Scope.Cached","url":"\/documentation\/factory\/scope\/cached-swift.class"},"doc://Factory/documentation/Factory/FactoryModifying":{"navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","kind":"symbol","type":"topic","title":"FactoryModifying","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"}}}