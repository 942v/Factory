{"sections":[],"abstract":[{"type":"text","text":"Grants access to the internal Factory."}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/factory","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/factory"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"externalID":"s:7Factory12LazyInjectedV7factoryA2AVyxGvp","role":"symbol","modules":[{"name":"Factory"}],"roleHeading":"Instance Property","title":"factory"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"kind":"text","text":": "},{"text":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"references":{"doc://Factory/documentation/Factory/LazyInjected":{"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyInjected"}],"title":"LazyInjected","url":"\/documentation\/factory\/lazyinjected","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/LazyInjected/factory":{"abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/factory","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"factory","url":"\/documentation\/factory\/lazyinjected\/factory","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","type":"topic","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","kind":"symbol","title":"Factory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}