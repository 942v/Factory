{"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true,"type":"reference"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can add the modifier, Factoryâ€™s are unique by default."}]}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Factory","title":"unique","externalID":"s:7Factory0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:7FactoryAAV","modules":[{"name":"Factory"}],"roleHeading":"Instance Property","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/unique"]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"sections":[],"references":{"doc://Factory/documentation/Factory/Factory/unique":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/unique","kind":"symbol","title":"unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","title":"Scope","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"type":"text","text":" "},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","type":"topic","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","kind":"symbol","title":"Factory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"url":"\/documentation\/factory\/factory\/factorymodifying-implementations","title":"FactoryModifying Implementations","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","abstract":[],"kind":"article","role":"collectionGroup"}}}