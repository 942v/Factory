{"variants":[{"paths":["\/documentation\/factory\/scope\/shared-swift.class\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"]]},"metadata":{"title":"init()","modules":[{"name":"Factory"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:7Factory5ScopeC6SharedCAEycfc","role":"symbol"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class/init()":{"url":"\/documentation\/factory\/scope\/shared-swift.class\/init()","title":"init()","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","type":"topic"},"doc://Factory/documentation/Factory/Scopes":{"role":"collectionGroup","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","kind":"article","abstract":[{"text":"Not everything wants to be a Singleton. Learn the power of Scopes.","type":"text"}],"title":"Scopes","url":"\/documentation\/factory\/scopes","type":"topic"}}}