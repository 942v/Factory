{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/factory\/scope\/singleton-swift.class"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"role":"symbol","title":"Scope.Singleton","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"symbolKind":"class","externalID":"s:7Factory5ScopeC9SingletonC","extendedModule":"Factory","modules":[{"name":"Factory"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/init()"]}],"references":{"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","type":"topic","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Scope":{"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"abstract":[{"type":"text","text":"Scopes are used to define the liefetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/init()","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class\/init()"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"role":"symbol","title":"Scope.Singleton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class"}}}