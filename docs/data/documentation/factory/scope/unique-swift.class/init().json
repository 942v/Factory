{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"override"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"kind":"text","text":"()"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/factory\/scope\/unique-swift.class\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"init()","modules":[{"name":"Factory"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:7Factory5ScopeC6UniqueCAEycfc","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class\/init()","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory/Scope/Unique-swift.class/init()":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/factory\/scope\/unique-swift.class\/init()","role":"symbol","type":"topic","title":"init()"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Unique","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Unique","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","title":"Scope.Unique","url":"\/documentation\/factory\/scope\/unique-swift.class"},"doc://Factory/documentation/Factory/Scopes":{"title":"Scopes","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","role":"collectionGroup","url":"\/documentation\/factory\/scopes","abstract":[{"text":"Not everything wants to be a Singleton. Learn the power of Scopes.","type":"text"}],"kind":"article"}}}