{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/register(factory:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)"},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Factory"}],"symbolKind":"method","title":"register(factory:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"externalID":"s:7FactoryAAV8register7factoryAByxGxyc_tF"},"abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"text":"Factory will evaluate the new closure and return an instance of the newly registered object instead.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Here’s an example of registering a new Factory closure.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["container.service.register {","    SomeService()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"type":"text","text":" "},{"text":"used to provide mocks and testing doubles.","type":"text"}]},{"inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes our of scope, so","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will all of its registrations."}],"type":"paragraph"},{"inlineContent":[{"text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"factory: A new factory closure that produces an object of the desired type when needed."},{"text":" ","type":"text"},{"type":"text","text":"Allows updating registered factory and scope."}]}]}]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","type":"topic","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","kind":"symbol","title":"Factory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/register(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","type":"topic","abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"url":"\/documentation\/factory\/factory\/register(factory:)","kind":"symbol","title":"register(factory:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]},"doc://Factory/documentation/Factory":{"role":"collection","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"identifier":"doc:\/\/Factory\/documentation\/Factory","type":"topic","kind":"symbol","title":"Factory"}}}