{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decorator"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}]},{"code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/decorator(_:)"]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzcF::SYNTHESIZED::s:7FactoryAAV","role":"symbol","extendedModule":"Factory","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"decorator(_:)"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Adds a factory specific decorator. The decorator will be ","type":"text"},{"inlineContent":[{"text":"always","type":"text"}],"type":"emphasis"},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for further examination or manipulation."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Factory/documentation/Factory/Factory/decorator(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/decorator(_:)","role":"symbol","type":"topic","kind":"symbol","title":"decorator(_:)","abstract":[{"text":"Adds a factory specific decorator. The decorator will be ","type":"text"},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)"},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"url":"\/documentation\/factory\/factory\/factorymodifying-implementations","title":"FactoryModifying Implementations","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","type":"topic","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","kind":"symbol","title":"Factory","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}