{"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Property","modules":[{"name":"Factory"}],"role":"symbol","title":"singleton","extendedModule":"Factory","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:7Factory09ParameterA0V"},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory/ParameterFactory/FactoryModifying-Implementations":{"url":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations","kind":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations","abstract":[],"type":"topic","title":"FactoryModifying Implementations","role":"collectionGroup"},"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","url":"\/documentation\/factory\/parameterfactory","title":"ParameterFactory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","url":"\/documentation\/factory\/scope\/singleton-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","role":"symbol","title":"Scope.Singleton","kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/factory\/parameterfactory\/singleton","title":"singleton","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}