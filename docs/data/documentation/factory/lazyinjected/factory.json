{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/factory"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"Factory"}],"externalID":"s:7Factory12LazyInjectedV7factoryA2AVyxGvp","role":"symbol","title":"factory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"property","roleHeading":"Instance Property"},"kind":"symbol","abstract":[{"type":"text","text":"Grants access to the internal Factory."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/factory"]}],"sections":[],"references":{"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/LazyInjected":{"title":"LazyInjected","kind":"symbol","url":"\/documentation\/factory\/lazyinjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}],"navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","role":"symbol"},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/LazyInjected/factory":{"type":"topic","url":"\/documentation\/factory\/lazyinjected\/factory","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"kind":"text","text":": "},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"title":"factory","abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/factory"}}}