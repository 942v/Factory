{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/resolvedOrNil()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve"},{"type":"text","text":" "},{"type":"text","text":"the property wrapper instance if it hasn’t already been resolved."}]},{"syntax":"swift","type":"codeListing","code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factory\/lazyinjected\/resolvedornil()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Factory"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"symbolKind":"method","title":"resolvedOrNil()","externalID":"s:7Factory12LazyInjectedV13resolvedOrNilxSgyF","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/LazyInjected/resolvedOrNil()":{"title":"resolvedOrNil()","url":"\/documentation\/factory\/lazyinjected\/resolvedornil()","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/resolvedOrNil()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolvedOrNil"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/LazyInjected":{"title":"LazyInjected","type":"topic","url":"\/documentation\/factory\/lazyinjected","role":"symbol","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyInjected"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}],"kind":"symbol"}}}