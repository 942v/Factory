{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn"]}],"metadata":{"title":"promised(key:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"roleHeading":"Instance Method","externalID":"s:7Factory16ManagedContainerPAAE8promised3keyAA09ParameterA0Vyqd__qd_0_SgGs12StaticStringV_tr0_lF","extendedModule":"Factory","symbolKind":"method","role":"symbol","modules":[{"name":"Factory"}]},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}]}]}],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory where registration is promised before resolution."}],"references":{"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:)-33ecn":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":") -> "},{"text":"ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?>","kind":"text"}],"url":"\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","title":"promised(key:)","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory where registration is promised before resolution."}]},"doc://Factory/documentation/Factory/ManagedContainer":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","title":"ManagedContainer","role":"symbol","url":"\/documentation\/factory\/managedcontainer"},"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","url":"\/documentation\/factory\/parameterfactory","title":"ParameterFactory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol"}}}