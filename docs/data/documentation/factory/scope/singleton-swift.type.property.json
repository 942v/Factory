{"sections":[],"metadata":{"modules":[{"name":"Factory"}],"roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":".","kind":"text"},{"text":"Singleton","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC"}],"externalID":"s:7Factory5ScopeC9singletonAC9SingletonCvpZ","symbolKind":"property","role":"symbol","title":"singleton","extendedModule":"Factory"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes","doc:\/\/Factory\/documentation\/Factory\/Scope"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory5ScopeC9SingletonC","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","text":"Singleton","kind":"typeIdentifier"}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"A reference to the default singleton scope manager."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/singleton-swift.type.property"]}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/Scopes":{"title":"Scopes","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","role":"collectionGroup","url":"\/documentation\/factory\/scopes","abstract":[{"text":"Not everything wants to be a Singleton. Learn the power of Scopes.","type":"text"}],"kind":"article"},"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","text":"Singleton"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","url":"\/documentation\/factory\/scope\/singleton-swift.type.property","type":"topic","title":"singleton","abstract":[{"type":"text","text":"A reference to the default singleton scope manager."}],"kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","title":"Scope"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class","title":"Scope.Singleton","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol"}}}