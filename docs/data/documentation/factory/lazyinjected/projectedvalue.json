{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LazyInjected","preciseIdentifier":"s:7Factory12LazyInjectedV","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"kind":"symbol","metadata":{"title":"projectedValue","roleHeading":"Instance Property","role":"symbol","externalID":"s:7Factory12LazyInjectedV14projectedValueACyxGvp","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory12LazyInjectedV","kind":"typeIdentifier","text":"LazyInjected"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"property","modules":[{"name":"Factory"}]},"variants":[{"paths":["\/documentation\/factory\/lazyinjected\/projectedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/projectedValue","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory/LazyInjected/projectedValue":{"abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LazyInjected","preciseIdentifier":"s:7Factory12LazyInjectedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"projectedValue","url":"\/documentation\/factory\/lazyinjected\/projectedvalue","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/LazyInjected":{"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyInjected"}],"title":"LazyInjected","url":"\/documentation\/factory\/lazyinjected","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"type":"topic","role":"symbol"}}}