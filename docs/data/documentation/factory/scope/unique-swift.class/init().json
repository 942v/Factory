{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/factory\/scope\/unique-swift.class\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class\/init()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:7Factory5ScopeC6UniqueCAEycfc","modules":[{"name":"Factory"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes","doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"]]},"references":{"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","type":"topic","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class\/init()","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/unique-swift.class\/init()"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"role":"symbol","title":"Scope.Unique","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Unique"}],"abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on evver resolution cycle."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Unique"}],"url":"\/documentation\/factory\/scope\/unique-swift.class"},"doc://Factory/documentation/Factory/Scopes":{"role":"collectionGroup","title":"Scopes","abstract":[{"type":"text","text":"Not everything wants to be a Singleton. Learn the power of Scopes."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","kind":"article","type":"topic","url":"\/documentation\/factory\/scopes"},"doc://Factory/documentation/Factory/Scope":{"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope"}}}