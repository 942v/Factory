{"sections":[],"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"],"kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SharedContainer"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Factory16ManagedContainerP","kind":"typeIdentifier","text":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"}]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The default ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},{"text":" provided is a SharedContainer. It can be used in both roles as needed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","type":"reference"},{"type":"text","text":" for more information."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factory\/sharedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"],"title":"Type Properties"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"metadata":{"roleHeading":"Protocol","title":"SharedContainer","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"Factory"}],"role":"symbol","externalID":"s:7Factory15SharedContainerP","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"url":"\/documentation\/factory\/sharedcontainer\/shared","type":"topic","required":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","kind":"symbol","role":"symbol","title":"shared","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Containers":{"url":"\/documentation\/factory\/containers","type":"topic","role":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","kind":"article","title":"Containers","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}]},"doc://Factory/documentation/Factory/Container":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","title":"Container","kind":"symbol","type":"topic","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"url":"\/documentation\/factory\/container","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}]},"doc://Factory/documentation/Factory/ManagedContainer":{"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","title":"ManagedContainer","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedContainer"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/SharedContainer":{"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/sharedcontainer","kind":"symbol","title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","type":"topic","role":"symbol"}}}