{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/manager"]},{"title":"Type Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/shared"]},{"title":"Default Implementations","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/ManagedContainer-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Containers are used by Factory to manage object creation, object resolution, and object lifecycles in general.","type":"text"}]},{"code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Registrations and scope caches will persist as long as the associated container remains in scope.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","type":"reference","isActive":true},{"text":" for more information.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/container"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"],"title":"Conforms To","type":"conformsTo"}],"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Container","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"symbolKind":"class","title":"Container","navigatorTitle":[{"text":"Container","kind":"identifier"}],"role":"symbol","roleHeading":"Class","modules":[{"name":"Factory"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Container","kind":"identifier"}],"externalID":"s:7Factory9ContainerC"},"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"references":{"doc://Factory/documentation/Factory/Container/init()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/init()","abstract":[{"type":"text","text":"Public initializer"}],"type":"topic","url":"\/documentation\/factory\/container\/init()","title":"init()","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","role":"collection","url":"\/documentation\/factory","title":"Factory"},"doc://Factory/documentation/Factory/Container/ManagedContainer-Implementations":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/ManagedContainer-Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","title":"ManagedContainer Implementations","url":"\/documentation\/factory\/container\/managedcontainer-implementations"},"doc://Factory/documentation/Factory/Container/manager":{"abstract":[{"type":"text","text":"Define the containerâ€™s manager."}],"type":"topic","url":"\/documentation\/factory\/container\/manager","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"manager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory16ContainerManagerC","text":"ContainerManager"}],"title":"manager","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/manager","kind":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"type":"topic","url":"\/documentation\/factory\/managedcontainer","title":"ManagedContainer"},"doc://Factory/documentation/Factory/Container":{"kind":"symbol","url":"\/documentation\/factory\/container","title":"Container","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","navigatorTitle":[{"kind":"identifier","text":"Container"}],"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Container/shared":{"kind":"symbol","url":"\/documentation\/factory\/container\/shared","role":"symbol","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/shared","abstract":[{"text":"Define the default shared container.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory9ContainerC","kind":"typeIdentifier","text":"Container"}]},"doc://Factory/documentation/Factory/SharedContainer":{"title":"SharedContainer","type":"topic","url":"\/documentation\/factory\/sharedcontainer","role":"symbol","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Containers":{"type":"topic","role":"article","kind":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","title":"Containers","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"url":"\/documentation\/factory\/containers"}}}