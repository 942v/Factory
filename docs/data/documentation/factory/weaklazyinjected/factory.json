{"abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/weaklazyinjected\/factory"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Property","modules":[{"name":"Factory"}],"title":"factory","externalID":"s:7Factory16WeakLazyInjectedV7factoryA2AVyxGvp","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/WeakLazyInjected":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WeakLazyInjected"}],"type":"topic","title":"WeakLazyInjected","kind":"symbol","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"role":"symbol","url":"\/documentation\/factory\/weaklazyinjected"},"doc://Factory/documentation/Factory/WeakLazyInjected/factory":{"role":"symbol","abstract":[{"type":"text","text":"Grants access to the internal Factory."}],"title":"factory","url":"\/documentation\/factory\/weaklazyinjected\/factory","type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"factory"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://Factory/documentation/Factory":{"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"Factory","url":"\/documentation\/factory","type":"topic"}}}