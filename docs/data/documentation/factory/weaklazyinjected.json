{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that WeakLazyInjected maintains a reference to the Factory, and, as such, to the Factory’s Container. This means that Container will never"},{"type":"text","text":" "},{"type":"text","text":"go out of scope as long as this property wrapper exists."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/factory\/weaklazyinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested. This"},{"type":"text","text":" "},{"type":"text","text":"wrapper maintains a weak reference to the object in question, so it must exist elsewhere."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:7Factory16WeakLazyInjectedV","modules":[{"name":"Factory"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3"]},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)"]}],"references":{"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-75hq3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3","kind":"symbol","type":"topic","url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3"},"doc://Factory/documentation/Factory/WeakLazyInjected":{"role":"symbol","title":"WeakLazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested. This"},{"type":"text","text":" "},{"type":"text","text":"wrapper maintains a weak reference to the object in question, so it must exist elsewhere."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"url":"\/documentation\/factory\/weaklazyinjected"},"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-4r0lx":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Container","preciseIdentifier":"s:7Factory9ContainerC"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx","kind":"symbol","type":"topic","url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-4r0lx"},"doc://Factory/documentation/Factory/WeakLazyInjected/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/factory\/weaklazyinjected\/wrappedvalue"},"doc://Factory/documentation/Factory/WeakLazyInjected/resolve(reset:)":{"role":"symbol","title":"resolve(reset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"reset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Allows the user to force a Factory resolution."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)","kind":"symbol","type":"topic","url":"\/documentation\/factory\/weaklazyinjected\/resolve(reset:)"},"doc://Factory/documentation/Factory/WeakLazyInjected/projectedValue":{"role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WeakLazyInjected","preciseIdentifier":"s:7Factory16WeakLazyInjectedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/factory\/weaklazyinjected\/projectedvalue"},"doc://Factory/documentation/Factory":{"role":"collection","title":"Factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","type":"topic","url":"\/documentation\/factory"}}}